class Table {
  AvailabilityStatus {
    Available {
      inUse() / {
      	Table[] tables =  {this};
      	Order order = new Order((java.sql.Date) new Date(), getRestoApp(), tables);
      	addOrder(order);
      } -> InUse;
    }
    
    InUse {
      OrderingItem {
        orderItem(Seat seat, Order order, PricedMenuItem pricedMenuItem) -> OrderingItem;
        issueBill(Order order, List<Seat> seats) [numberOfOrders() > 1]/ {
          removeOrder(order);
        } -> OrderingItem;
        issueBill(Order order, List<Seat> seats) [numberOfOrders() =< 1] -> IssuingBill;
      }
      
      IssuingBill {
      	orderItem(Seat seat, Order order, PricedMenuItem pricedMenuItem) -> OrderingItem;
        payBill(Bill bill) -> IssuingBill;
      }
      available() -> Available
    } 
  }
   
  
  ReservationStatus {
    NotReserved {
    	reserve(Date dateTime, int numberInParty, String contactName, String contactEmailAddress, String contactPhoneNumber) -> Reserved;
    }
    
    Reserved {
    	entry / { 
			// code to show next reservation on display    	
    	 }
    	unreserve(int reservationNumber) [!hasReservations()] -> NotReserved;
    	unreserve(int reservationNumber) [hasReservations()] -> Reserved;

    }
  }
}
